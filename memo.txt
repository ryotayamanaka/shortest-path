
---------------------------

docker-compose exec database sqlplus sys/Welcome1@ORCLPDB1 as sysdba

CREATE USER route_finder
IDENTIFIED BY Welcome1
DEFAULT TABLESPACE users
TEMPORARY TABLESPACE temp
QUOTA UNLIMITED ON users;

GRANT alter session TO route_finder;
GRANT create procedure TO route_finder;
GRANT create session TO route_finder;
GRANT create table TO route_finder;
GRANT create type TO route_finder;
GRANT create any index TO route_finder;

EXIT

GRANT GRAPH_DEVELOPER to route_finder;

---------------------------

sqlplus graph_dev/Welcome1@ORCLPDB1

--EXEC OPG_APIS.DROP_PG('graph1');
EXEC OPG_APIS.CREATE_PG('route');

EXIT

---------------------------

docker-compose exec graph-client opg-jshell --no_connect

var jdbcUrl = "jdbc:oracle:thin:@database:1521/orclpdb1";
var conn = DriverManager.getConnection(jdbcUrl, "amelie", "Welcome1");
conn.setAutoCommit(false); // Connection auto-commit should be off for modify
var pgql = PgqlConnection.getConnection(conn);
pgql.setGraph("route");

// Delete all
// pgql.prepareStatement("DELETE v FROM MATCH (v)").execute()

// Insert nodes
pgql.prepareStatement("INSERT VERTEX v LABELS (node) PROPERTIES (v.name = 'A')").execute();
pgql.prepareStatement("INSERT VERTEX v LABELS (node) PROPERTIES (v.name = 'B')").execute();
pgql.prepareStatement("INSERT VERTEX v LABELS (node) PROPERTIES (v.name = 'C')").execute();
pgql.prepareStatement("INSERT VERTEX v LABELS (node) PROPERTIES (v.name = 'D')").execute();
pgql.prepareStatement("INSERT VERTEX v LABELS (node) PROPERTIES (v.name = 'E')").execute();
pgql.prepareStatement("INSERT VERTEX v LABELS (node) PROPERTIES (v.name = 'F')").execute();
pgql.prepareStatement("INSERT VERTEX v LABELS (node) PROPERTIES (v.name = 'G')").execute();
pgql.prepareStatement("INSERT VERTEX v LABELS (node) PROPERTIES (v.name = 'H')").execute();

// Insert edges
pgql.prepareStatement("INSERT EDGE e BETWEEN s AND d LABELS (connects) PROPERTIES (e.cost = 1) FROM MATCH (s), MATCH (d) WHERE s.name = 'A' AND d.name = 'B'").execute();
pgql.prepareStatement("INSERT EDGE e BETWEEN s AND d LABELS (connects) PROPERTIES (e.cost = 6) FROM MATCH (s), MATCH (d) WHERE s.name = 'A' AND d.name = 'D'").execute();
pgql.prepareStatement("INSERT EDGE e BETWEEN s AND d LABELS (connects) PROPERTIES (e.cost = 5) FROM MATCH (s), MATCH (d) WHERE s.name = 'B' AND d.name = 'C'").execute();
pgql.prepareStatement("INSERT EDGE e BETWEEN s AND d LABELS (connects) PROPERTIES (e.cost = 3) FROM MATCH (s), MATCH (d) WHERE s.name = 'B' AND d.name = 'E'").execute();
pgql.prepareStatement("INSERT EDGE e BETWEEN s AND d LABELS (connects) PROPERTIES (e.cost = 2) FROM MATCH (s), MATCH (d) WHERE s.name = 'C' AND d.name = 'E'").execute();
pgql.prepareStatement("INSERT EDGE e BETWEEN s AND d LABELS (connects) PROPERTIES (e.cost = 6) FROM MATCH (s), MATCH (d) WHERE s.name = 'C' AND d.name = 'F'").execute();
pgql.prepareStatement("INSERT EDGE e BETWEEN s AND d LABELS (connects) PROPERTIES (e.cost = 2) FROM MATCH (s), MATCH (d) WHERE s.name = 'D' AND d.name = 'B'").execute();
pgql.prepareStatement("INSERT EDGE e BETWEEN s AND d LABELS (connects) PROPERTIES (e.cost = 3) FROM MATCH (s), MATCH (d) WHERE s.name = 'D' AND d.name = 'G'").execute();
pgql.prepareStatement("INSERT EDGE e BETWEEN s AND d LABELS (connects) PROPERTIES (e.cost = 1) FROM MATCH (s), MATCH (d) WHERE s.name = 'E' AND d.name = 'D'").execute();
pgql.prepareStatement("INSERT EDGE e BETWEEN s AND d LABELS (connects) PROPERTIES (e.cost = 8) FROM MATCH (s), MATCH (d) WHERE s.name = 'E' AND d.name = 'H'").execute();
pgql.prepareStatement("INSERT EDGE e BETWEEN s AND d LABELS (connects) PROPERTIES (e.cost = 3) FROM MATCH (s), MATCH (d) WHERE s.name = 'F' AND d.name = 'E'").execute();
pgql.prepareStatement("INSERT EDGE e BETWEEN s AND d LABELS (connects) PROPERTIES (e.cost = 7) FROM MATCH (s), MATCH (d) WHERE s.name = 'F' AND d.name = 'H'").execute();
pgql.prepareStatement("INSERT EDGE e BETWEEN s AND d LABELS (connects) PROPERTIES (e.cost = 2) FROM MATCH (s), MATCH (d) WHERE s.name = 'G' AND d.name = 'E'").execute();
pgql.prepareStatement("INSERT EDGE e BETWEEN s AND d LABELS (connects) PROPERTIES (e.cost = 2) FROM MATCH (s), MATCH (d) WHERE s.name = 'G' AND d.name = 'H'").execute();

// Shortest path
var ps = pgql.prepareStatement(
    " SELECT a.name AS a, b.name AS b "
  + " FROM MATCH (a) -[e]-> (b) "
);
ps.execute();
ps.getResultSet().print();
